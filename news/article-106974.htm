<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freeclashmeta.github.io/news/article-106974.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Python数据结构-列表</title>
        <meta name="description" content="正则小练习：匹配出以下字符串所有url， import re  def find_url(sentence, show_urls=None, delete_urls=None):     r = re" />
        <link rel="icon" href="/assets/website/img/freeclashmeta/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Clash Meta免费节点分享站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freeclashmeta.github.io/news/article-106974.htm" />
    <meta property="og:site_name" content="Free Clash Meta免费节点分享站" />
    <meta property="og:title" content="Python数据结构-列表" />
    <meta property="og:image" content="https://freeclashmeta.github.io/uploads/20240729-1/fbd4aa1772d53ce714cf67d07b87f577.webp" />
        <meta property="og:release_date" content="2025-04-29T08:02:00" />
    <meta property="og:updated_time" content="2025-04-29T08:02:00" />
        <meta property="og:description" content="正则小练习：匹配出以下字符串所有url， import re  def find_url(sentence, show_urls=None, delete_urls=None):     r = re" />
        
    <!-- web fonts -->
    <link href="//fonts.googleapis.com/css?family=Roboto:300,400,500,700,900&display=swap" rel="stylesheet">
    <link href="//fonts.googleapis.com/css?family=Nunito:200,300,400,600,700,800,900&display=swap" rel="stylesheet">
    <!-- //web fonts -->
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/freeclashmeta/style-starter.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Python数据结构-列表">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XC0F2XP2Y3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XC0F2XP2Y3');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="w3l-bootstrap-header fixed-top">
    <nav class="navbar navbar-expand-lg navbar-light p-2">
        <div class="container">
                        <a class="navbar-brand" href="/">Free Clash Meta</a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/client.htm">客户端</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                    </ul>
            </div>
        </div>
    </nav>
</div>
    <!-- index-block1 -->
    <div class="w3l-index-block1 list">
        <div class="content py-5">
            <div class="container">
                <div class="row py-md-5 py-3">
                    <div class="col-md-5 content-left">
                        <h1 class="pt-5">Python数据结构-列表</h1>
                        <p class="mt-3 mb-md-5 mb-4">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                        </p>
                    </div>
                    <div class="col-md-7 content-photo mt-md-0 mt-5">
                        <img src="/assets/website/img/freeclashmeta/main.jpg" class="img-fluid" alt="main image">
                    </div>
                </div>
                <div class="clear"></div>
            </div>
        </div>
    </div>
    <!-- //index-block1 -->
    <!-- content-with-photo17 -->
    <section class="w3l-index-block3">
        <div class="section-info py-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<div id="content_views" class="htmledit_views"> <p id="ud7d2d73c">正则小练习：<span style="color:#fe2c24;">匹配出以下字符串所有url</span>，</p> <pre><code class="language-python">import re  def find_url(sentence, show_urls=None, delete_urls=None):     r = re.compile(         r'(?i)\b((?:[a-z][\w-]+:(?:/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()&lt;&gt;]+|\(([^\s()&lt;&gt;]+|(\([^\s()&lt;&gt;]+\)))*\))+(?:\(([^\s()&lt;&gt;]+|(\([^\s()&lt;&gt;]+\)))*\)|[^\s`!()\[\]{};:\'".,&lt;&gt;?«»“”‘’]))')     url_list = r.findall(sentence)     if show_urls == 1:         for i in url_list:             print(i[0])      if delete_urls == 1:         for j in url_list:             # sentence = sentence.replace(j[0], '&lt;URL&gt;')             sentence = sentence.replace(j[0], '')         return sentence     return "匹配完成"   if __name__ == '__main__':     str1 = '你好哇 大佬 www.google.com' 	str2 = '哇 www.baidu.com 打不开了' 	str3 = 'python网址在哪儿 https://www.python.com 找到了'     </code></pre> <p style="text-align:center;"><img decoding="async" alt="" id="uefda320f" src="http://img.555519.xyz/uploads/20230110/89a45e2b11a666621106635259467131.jpg"></p> <p id="ua46bf048">对于字符串的基础使用基本已经阐述完毕！需要复杂使用的还需<span style="color:#fe2c24;">项目实战</span>以及<span style="color:#fe2c24;">向大佬们请教</span>。后面的几篇文章还是想阐述关于数据结构的一些基础使用。字符串可以看作为只存储字符序列的数据结构，同样为了方便众多使用者的理念，Python提供了几个功能强大且高效的数据结构：列表、元组、字典以及集合。作为使用者的我们只需要组合使用即可。</p> <p id="uba0155ba">在开始数据结构使用前，需要介绍一个Python的另一个内置函数：type()，该函数在我们需要了解值或变量的数据类型时极为方便。如下：type输出结果中包含class 类，可以返回特定值和变量或者是否为模块函数。在代码调试过程中，该函数会起到很大的作用，例如在使用数据集合但并不知集合内部的数据类型时，可以使用type准确的返回对象类型。</p> <p style="text-align:center;"><img decoding="async" alt="" id="u11bf6176" src="http://img.555519.xyz/uploads/20230110/c9743ced3eae5882f7502640360c3bb1.jpg"></p> <pre><code>本文重点内容主要是对列表数据结构的使用</code></pre> </h1> <p id="u9386b608">在Python中，序列是一组按顺序排列的值。Python 有 3 种内置的序列类型：字符串、 元组和列表。 序列支持切片、索引，同时具备以下特征：</p> <p id="ud614c653">1 第一个正索引为零，指向左端；</p> <p id="uecd7f71c">2 第一个负索引为 -1，指向右端；</p> <p id="u93397f1d">3 可使用切片表示法来复制子序列；</p> <p id="ue53ea913">4 可使用 + 和 * 进行拼接；</p> <p id="u12832640">5 可使用函数 len 计算其长度，例如，len(string) 返回序列 string 包含的元素数;</p> <p id="u808dd79c">6 表达式 x in string 检查序列 string 是否包含元素 x 。</p> </h1> <p id="uafa93fcb">在Python中，列表的元素不是固定不变的，而是可变的，也就是表示可在不复制的情况下，添加、删除或修改列表元素。列表使用方括号将元素括起来，里面的元素使用逗号分开，举几个简单示例：随便定义一个num列表，可以使用+和*拼接列表，也可以使用len()获取列表长度，并且，同样可以使用切片和索引方式来获取列表中的子列表。</p> <p style="text-align:center;"><img decoding="async" alt="" id="u1d72eef6" src="http://img.555519.xyz/uploads/20230110/49557cec8aa5d1f8f4a53b7319bbe380.jpg"></p> <p id="ufe78a578">需要注意的是：列表可包含任何类型的值：数字、字符串甚至其他序列。空列表用 [] 表示，而只包含一个元素（x）的单元素列表写做 [x] 。其访问方式与字符串的索引方式一样，以num2为例，如下图：列表索引从 <strong>0</strong> 开始，第二个索引是 <strong>1</strong>，依此类推。<span style="color:#fe2c24;">当然也可以从右向左进行索引</span>。</p> <p style="text-align:center;"><img decoding="async" alt="" id="qc7Tn" src="http://img.555519.xyz/uploads/20230110/673b6e608ebc1efb4476fbaea85ca758.jpg"></p> <p id="u2b3a6f0f">除了以上索引功能，列表也支持修改元素的功能，如下图我们将num2中的indexes=3的值777改为了'red'字符串，Python对原值进行了删除。</p> <p style="text-align:center;"><img decoding="async" alt="" id="u5d8b3206" src="http://img.555519.xyz/uploads/20230110/33c5979aa84a3dcb4732aa751237e4fe.jpg"></p> <p id="ub26dc205">这里可以得到一个结论：列表元素指向相应的值，这也产生了一个十分有趣的作用。这里让一个列表元素指向列表本身，创建了一个自引用的数据结构；打印输出中的 [...] 表明，Python可以识别自引用，不会愚蠢的不断打印列表（功能强大！） 。</p> <p style="text-align:center;"><img decoding="async" alt="" id="u8b78cca1" src="http://img.555519.xyz/uploads/20230110/db232eeb1a2a49fbb5ee9fb4e49bfdd4.jpg"></p> <pre><code class="language-html">本文首发公众号：涤生手记大数据：更多资源，更便捷，浏览交流，更多免费职业规划，请关注哦。</code></pre> <h2>&nbsp;2.1 列表函数</h2> <p id="u02a4217f">Python针对列表也提供了十分强大的函数，整理如下表所示：除count返回值只返回一个数字之外，其他所有函数都涉及到修改传递给它们的列表。使用时一定小心，不然会误删列表中的元素或者在错误的位置插入元素。</p> <table id="Sgwuc"> <tbody> <tr> <td> <p id="udd16139d">函数名</p> </td> <td> <p id="ue15cc13d">返回值</p> </td> </tr> <tr> <td> <p id="u32f4cddf">num.append(n)</p> </td> <td> <p id="u1f15fe6d">在列表 num 末尾添加元素 n</p> </td> </tr> <tr> <td> <p id="u8074f6ee">num.count(n)</p> </td> <td> <p id="u8021c366">返回元素 n 在列表 num 中出现的次数</p> </td> </tr> <tr> <td> <p id="u3237442c">num.extend(lnumt)</p> </td> <td> <p id="uabc4df57">将 lnumt 的所有元素都添加到列表 num末尾</p> </td> </tr> <tr> <td> <p id="u1f043e06">num.indexnajiu (n)</p> </td> <td> <p id="u44f1eb45">返回第一个 n 元素的索引</p> </td> </tr> <tr> <td> <p id="u6a0baa23">num.innumert(i, n)</p> </td> <td> <p id="ud3e73165">将元素 n 插入到索引 i 指定的元素前面，结果是 num[i] == n</p> </td> </tr> <tr> <td> <p id="u2fa85731">num.pop(i)</p> </td> <td> <p id="u3fbaa02a">删除并返回 num 中索引为 i 的元素</p> </td> </tr> <tr> <td> <p id="uacd31bda">num.remove(n)</p> </td> <td> <p id="u371e2bf9">删除 num 中的第一个 n 元素</p> </td> </tr> <tr> <td> <p id="u15428f2f">num.revernume()</p> </td> <td> <p id="u73f6a197">反转 num 中元素的排列顺序</p> </td> </tr> <tr> <td> <p id="u2018310e">num.numort()</p> </td> <td> <p id="uc49bdfb5">将 num 的元素按升序排列</p> </td> </tr> </tbody> </table> <p id="u81bc35b6">以函数append为例，在列表num末尾添加一个元素，简单的一种编程模式，在函数开头创建一个空列表，然后再列表中添加元素，如下：<span style="color:#fe2c24;">判断一个列表中的数据是正数还是负数</span>。</p> <pre><code class="language-python">def list_num(list):     msg = []     for num in list:         if num &lt; 0:             s = str(num) + ' 是负数'         elif 0 &lt;= num &lt;= 9:             s = str(num) + ' 是正数'         msg.append(s)     return msg  if __name__ == '__main__':     print(list_num([3,-10.7,22,-99,1]))</code></pre> <p style="text-align:center;"><img decoding="async" alt="" id="ufad29549" src="http://img.555519.xyz/uploads/20230110/6260abf8ed72be9d4bbc56d3e8df0c88.jpg"></p> <p id="u27e4edd7">extend列表追加函数的使用：</p> <p style="text-align:center;"><img decoding="async" alt="" id="ua329f5d2" src="http://img.555519.xyz/uploads/20230110/6b7d04f131713782ff33e50085a245ca.jpg"></p> <p id="u056d9531">pop删除函数的使用：</p> <p style="text-align:center;"><img decoding="async" alt="" id="uaefc9904" src="http://img.555519.xyz/uploads/20230110/101ce34c0f7d8b9ee392361f0c2a4931.jpg"></p> <p id="uc3c4d412">其它相关函数的使用就不一一举例了，有兴趣的可以自己体验一下。</p> <h2 id="BHu0G">2.2 列表排序</h2> <p id="ua4b3c3aa">对数据进行排序是计算机最常做的事情 之一。无论是对人还是计算机来说，排序后 的数据通常比未排序的数据更容易处理。例如，在列表中查找最小的元素时，如果列表经过了排序，就根本不需要查找：第一个元素就是，人们的习惯就是喜欢排列有序的数据（特例除外哈）。</p> <p id="u7db15479">在 Python 中，要对列表进行排序，最简 单的方式是使用函数 sort()。实际上，这个函数可用于对包含数万个元素的列表进行快速排序，同时可以修改列表。如下：sort总是按照从小到大的顺序排序，若需要相反的顺序排列元素，先调用sort方法之后在使用reverse方法。</p> <p style="text-align:center;"><img decoding="async" alt="" id="ue3344a16" src="http://img.555519.xyz/uploads/20230110/713e0949c732b293e3696c28f941ec5a.jpg"></p> <p style="text-align:center;"><img decoding="async" alt="" id="u14bdc30a" src="http://img.555519.xyz/uploads/20230110/954d1f0b43becb3997bf9c3a3810ed7c.jpg"></p> <p id="u6206d1cb">Python还可以给包含元组（将在下次讲解）的列表进行排序，如下：给列表中的元组排序时，首先按元组的 第一个元素排序，如果第一个元素相同，则按第二个元素排序，依此类推。</p> <p style="text-align:center;"><img decoding="async" alt="" id="u2f9f7968" src="http://img.555519.xyz/uploads/20230110/bf1d1521d5f03279f4ff09952536cbf8.jpg"></p> <h2 id="qebfx">2.3 解析列表</h2> <p id="u0c906980">在实际Python使用中，会有很多地方使用到列表，所以Python提供了一种用于创建列表的特殊表示法—列表解析。下面举例如何使用列表解析来创建 一个由 1~10 的平方组成的列表： 这种表示法的主要优点是简洁易读。for循环代码没有使用列表解析，使用越多就越会发现，列表解析方法编写容易并且简洁。</p> <pre><code class="language-python">if __name__ == '__main__':     print([num * num for num in range(1,11)])     print('------------------')     num_list = []     for i in range(1, 11):        num_list.append(i * i)     print(num_list)</code></pre> <p style="text-align:center;"><img decoding="async" alt="" id="u6283aba8" src="http://img.555519.xyz/uploads/20230110/386e20a447a9844be9bfa6df8c333437.jpg"></p> <p id="u3a5bacd9">在看3个小例子：第一个表示获取1~10的立方，第二个表示修改现有列表的字符串，第三个表示将列表中的数字翻倍并减去3.</p> <p style="text-align:center;"><img decoding="async" alt="" id="ua5d9a15b" src="http://img.555519.xyz/uploads/20230110/7dba7055cbe5988ef00f34423439ad3c.jpg"></p> <p id="ufebefd15">使用列表解析过滤筛选需要的结果集，如下：</p> <p style="text-align:center;"><img decoding="async" alt="" id="ue2e33770" src="http://img.555519.xyz/uploads/20230110/2214e38f6abce6f8d90c25321501052a.jpg"></p> <pre><code class="language-python">list = []     num = [-1, 0, 6, -4, -2, 3, 8, -12]     for n in num:         if n &gt; 0:             list.append(n)</code></pre> <p id="u588c862a">对比使用常规循环，可以体现出列表解析更加简洁易读！其它还可以实现诸如删除特定字符串的功能，有兴趣的朋友们可以实现一下删除特定字符串的列表解析，十分简单。</p> </p></div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-106082.htm">css实现文本垂直居中水平居中的几种方法</a></p>
                                        <p>下一个：<a href="/news/article-106977.htm">动物疫苗注射方法视频讲解教程（动物疫苗接种方法）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-102822.htm" title="动物疫苗接种时间表格图 动物疫苗接种时间表格图片">动物疫苗接种时间表格图 动物疫苗接种时间表格图片</a></li>
                        <li class="py-2"><a href="/news/article-72052.htm" title="什么是Python高阶函数">什么是Python高阶函数</a></li>
                        <li class="py-2"><a href="/news/article-75384.htm" title="spring boot 导入配置文件">spring boot 导入配置文件</a></li>
                        <li class="py-2"><a href="/news/article-90192.htm" title="成都宠物邮寄（成都哪里可以寄宠物快递）">成都宠物邮寄（成都哪里可以寄宠物快递）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-12-free-subscribe-node.htm" title="「3月12日」最高速度20.3M/S，2025年Free Clash Meta每天更新免费节点订阅地址">「3月12日」最高速度20.3M/S，2025年Free Clash Meta每天更新免费节点订阅地址</a></li>
                        <li class="py-2"><a href="/news/article-85117.htm" title="vue中动态控制btn的disabled属性方式_vue.js">vue中动态控制btn的disabled属性方式_vue.js</a></li>
                        <li class="py-2"><a href="/news/article-81536.htm" title="动物医院办理条件要求是什么呢（动物医院收费标准）">动物医院办理条件要求是什么呢（动物医院收费标准）</a></li>
                        <li class="py-2"><a href="/news/article-91450.htm" title="宠物医院24小时在线咨询电话（宠物医院联系方式）">宠物医院24小时在线咨询电话（宠物医院联系方式）</a></li>
                        <li class="py-2"><a href="/news/article-66241.htm" title="上海市宠物领养中心官网（上海宠物领养中心免费领养狗狗）">上海市宠物领养中心官网（上海宠物领养中心免费领养狗狗）</a></li>
                        <li class="py-2"><a href="/news/article-65642.htm" title="济南宠物领养活动（济南可以领养猫狗的宠物店）">济南宠物领养活动（济南可以领养猫狗的宠物店）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">83</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </section>
        <section class="w3l-market-footer">
        <footer class="footer-28">
            <div class="footer-bg-layer">
                <div class="midd-footer-28 align-center py-lg-4 py-3 mt-5">
                    <div class="container">
                        <p class="copy-footer-28 text-center">
                                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            Free Clash Meta免费节点分享站 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </footer>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            &#10548;
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //footer-28 block -->
    <!-- jQuery, Bootstrap JS -->
    <script src="/assets/website/js/frontend/freeclashmeta/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/freeclashmeta/bootstrap.min.js"></script>
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/freeclashmeta/owl.carousel.js"></script>
    <!-- script for owlcarousel -->
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: true,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: true
                },
                1000: {
                    items: 1,
                    nav: true
                }
            }
        })
    })
    </script>
    <!-- //script for owlcarousel -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <script src="/assets/website/js/frontend/freeclashmeta/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>