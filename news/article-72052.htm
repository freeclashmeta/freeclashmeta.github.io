<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freeclashmeta.github.io/news/article-72052.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>什么是Python高阶函数</title>
        <meta name="description" content="什么是高阶函数 高阶函数就是能够把函数当成参数传递的函数就是高阶函数，换句话说如果一个函数的参数是函数，那么这个函数就是一个高阶函数。 高阶函数可以是你使用def关键字自定义的函数，也有Python系" />
        <link rel="icon" href="/assets/website/img/freeclashmeta/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Clash Meta免费节点分享站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freeclashmeta.github.io/news/article-72052.htm" />
    <meta property="og:site_name" content="Free Clash Meta免费节点分享站" />
    <meta property="og:title" content="什么是Python高阶函数" />
    <meta property="og:image" content="https://freeclashmeta.github.io/uploads/20240729-1/facfe55485c21b34b490e20135d609d0.webp" />
        <meta property="og:release_date" content="2025-03-12T06:07:09" />
    <meta property="og:updated_time" content="2025-03-12T06:07:09" />
        <meta property="og:description" content="什么是高阶函数 高阶函数就是能够把函数当成参数传递的函数就是高阶函数，换句话说如果一个函数的参数是函数，那么这个函数就是一个高阶函数。 高阶函数可以是你使用def关键字自定义的函数，也有Python系" />
        
    <!-- web fonts -->
    <link href="//fonts.googleapis.com/css?family=Roboto:300,400,500,700,900&display=swap" rel="stylesheet">
    <link href="//fonts.googleapis.com/css?family=Nunito:200,300,400,600,700,800,900&display=swap" rel="stylesheet">
    <!-- //web fonts -->
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/freeclashmeta/style-starter.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="什么是Python高阶函数">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-XC0F2XP2Y3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XC0F2XP2Y3');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="w3l-bootstrap-header fixed-top">
    <nav class="navbar navbar-expand-lg navbar-light p-2">
        <div class="container">
                        <a class="navbar-brand" href="/">Free Clash Meta</a>
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/client.htm">客户端</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                    </ul>
            </div>
        </div>
    </nav>
</div>
    <!-- index-block1 -->
    <div class="w3l-index-block1 list">
        <div class="content py-5">
            <div class="container">
                <div class="row py-md-5 py-3">
                    <div class="col-md-5 content-left">
                        <h1 class="pt-5">什么是Python高阶函数</h1>
                        <p class="mt-3 mb-md-5 mb-4">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                        </p>
                    </div>
                    <div class="col-md-7 content-photo mt-md-0 mt-5">
                        <img src="/assets/website/img/freeclashmeta/main.jpg" class="img-fluid" alt="main image">
                    </div>
                </div>
                <div class="clear"></div>
            </div>
        </div>
    </div>
    <!-- //index-block1 -->
    <!-- content-with-photo17 -->
    <section class="w3l-index-block3">
        <div class="section-info py-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <h3 id="什么是高阶函数">什么是高阶函数</h3> <p>高阶函数就是能够把函数当成参数传递的函数就是高阶函数，换句话说如果一个函数的参数是函数，那么这个函数就是一个高阶函数。</p> <p>高阶函数可以是你使用<code>def</code>关键字自定义的函数，也有Python系统自带的内置高阶函数。</p> <h3 id="自定义一个高阶函数">自定义一个高阶函数</h3> <p>我们下面的例子中，函数 senior 的参数中有一个是函数，那么senior就是一个高阶函数；函数 tenfold 的参数不是函数，所以tenfold就只是一个普通的函数。</p> <pre><code class="language-python"># 定义高阶函数 def senior(func, container):    """    将容器中的数据依次放入函数中进行运算，    将结果返回到迭代器中，最后返回迭代器。    """    lst = list()    for i in container:       lst.append(func(i))    return iter(lst)   # 定义普通的功能函数 def tenfold(num):    """    十倍器    将数据乘 10，返回结果。    """    return num * 10   # 定义一个列表 lst = [10, 20666, 'msr']  # 使用高阶函数 it = senior(tenfold, lst) print(list(it)) # [100, 206660, 'msrmsrmsrmsrmsrmsrmsrmsrmsrmsr']</code></pre> <h3 id="常用的内置高阶函数">常用的内置高阶函数</h3> <table> <thead> <tr> <th>函数</th> <th>功能作用</th> </tr> </thead> <tbody> <tr> <td>map</td> <td>处理可迭代对象中的数据，将处理的结果返回到迭代器中。</td> </tr> <tr> <td>filter</td> <td>过滤可迭代对象中的数据，将过滤好的数据返回到迭代器中。</td> </tr> <tr> <td>reduce</td> <td>处理可迭代对象中的数据，将最终的结果返回出来。</td> </tr> <tr> <td>sorted</td> <td>排序可迭代对象中的数据，将排序好的结果返回出来。</td> </tr> </tbody> </table> <h3 id="map函数">map函数</h3> <blockquote> <p>语法：map(function, Iterable)</p> </blockquote> <h4 id="参数说明">参数说明</h4> <p>function：函数，可以是 自定义函数 或者是 内置函数；</p> <p>iterable：可迭代对象，可迭代性数据。（容器类型数据和类容器类型数据、range对象、迭代器）</p> <h4 id="功能">功能</h4> <p>把可迭代对象中的数据一个一个拿出来，然后放在到指定的函数中做处理，将处理之后的结果依次放入迭代器中，最后返回这个迭代器。</p> <h4 id="实例">实例</h4> <p><strong>将列表中的元素转成整型类型，然后返回出来。</strong></p> <pre><code class="language-python">lst = ['1', '2', '3', '4']  """ 使用常规的写法 """ new_lst = list() for i in lst:     new_lst.append(int(i)) print(new_lst)  # [1, 2, 3, 4]   """ 使用map函数实现 """ it = map(int, lst) new_lst = list(it) print(new_lst)  # [1, 2, 3, 4]</code></pre> <p><strong>列表中的每一个数依次乘 2的下标索引+1 次方。使用自定义的函数，配合实现功能。</strong></p> <pre><code class="language-Python">lst = [1, 2, 3, 4]  """ 普通的方法，利用左移 """ new_lst = list() for i in lst: 	res = i &lt;&lt; i 	new_lst.append(res) print(new_lst)  # [2, 8, 24, 64]   """ 使用map函数 """ # 先定义一个左移函数，自定义的函数必须是一个带参函数并且有返回值 def func(num): 	return num &lt;&lt; num new_lst = list(map(func, lst)) print(new_lst)  # [2, 8, 24, 64]   """ 使用lambda简化 """ new_lst = list(map(lambda num: num &lt;&lt; num, lst)) print(new_lst)  # [2, 8, 24, 64]</code></pre> <h3 id="filter函数">filter函数</h3> <blockquote> <p>语法：filter(function, iterable)</p> </blockquote> <p>参数的意义和map函数一样</p> <h4 id="功能-1">功能</h4> <p>filter用于过滤数据，将可迭代对象中的数据一个一个的放入函数中进行处理，如果函数返回值为真，将数据保留；反之不保留，最好返回迭代器。</p> <h4 id="实例-1">实例</h4> <p><strong>保留容器中的偶数</strong></p> <pre><code class="language-python">lst = [11, 2, 3, 34, 4, 4, 55]  """ 常规写法 """ new_lst = list() for i in lst:    if i % 2 == 0:       new_lst.append(i) print(new_lst)  # [2, 34, 4, 4]   """ 使用filter函数 """ def func(num):    if num % 2 == 0:       return True new_lst = list(filter(func, lst)) print(new_lst)  # [2, 34, 4, 4]   """ filter + lambda """ new_lst = list(filter(lambda num: True if (num % 2 == 0) else False, lst)) print(new_lst)  # [2, 34, 4, 4]</code></pre> <h3 id="reduce函数">reduce函数</h3> <blockquote> <p>语法：reduce(function, iterable)</p> </blockquote> <p>参数含义与map、filter一致。</p> <h4 id="功能-2">功能</h4> <p>计算数据，将可迭代对象的中的前两个值放在函数中做出运算，得出结果在和第三个值放在函数中运算得出结果，以此类推，直到所有的结果运算完毕，返回最终的结果。</p> <p>根据功能我们就应该直到，reduce中的函数需要可以接收两个参数才可以。</p> <h4 id="实例-2">实例</h4> <blockquote> <p><strong>reduce函数使用需要先从标准库functools中导入</strong></p> </blockquote> <p><strong>将列表中的数据元素组合成为一个数，</strong></p> <pre><code class="language-python">from functools import reduce  lst = [2, 0, 6, 6, 6]   """ 常规方法 """ char = str() for i in lst:    char += str(i) print(int(char))    # 20666   """ 使用reduse函数 """ def func(x, y):    return x * 10 + y res = reduce(func, lst) print(res)  # 20666   """ reduce + lambda """ res = reduce((lambda x, y: (x * 10 + y)), lst) print(res)  # 20666</code></pre> <h3 id="sorted函数">sorted函数</h3> <blockquote> <p>语法：sorted(Iterable, key=function, reverse=False)</p> </blockquote> <h4 id="参数说明-1">参数说明</h4> <p>iterable：可迭代对象；</p> <p>key：指定函数，默认为空；</p> <p>reverse：排序的方法，默认为False，意为升序；</p> <h4 id="功能-3">功能</h4> <p>如果没有指定函数，就单纯的将数据安札ASCII进行排序；如果指定了函数，就将数据放入函数中进行运算，根据数据的结果进行排序，返回新的数据，不会改变原有的数据。</p> <p><strong>注意，如果指定了函数，排序之后是根据数据的结果对原数据进行排序，而不是排序计算之后的就结果数据。</strong></p> <h4 id="实例-3">实例</h4> <p>将列表中的数据进行排序。</p> <pre><code class="language-python">lst = [1, 23, 34, 5, 6, 342, 12, 12, 2345, -3]  """ 使用列表的内置函数进行排序，默认升序 """ lst.sort() print(lst)  # [-3, 1, 5, 6, 12, 12, 23, 34, 342, 2345] # 降序排序 lst.sort(reverse=True) print(lst)  # [2345, 342, 34, 23, 12, 12, 6, 5, 1, -3]   lst = [1, 23, 34, 5, 6, 342, 12, 12, 2345, -3] """ 使用sorted进行排序 """ new_lst = sorted(lst) print(new_lst)  # [-3, 1, 5, 6, 12, 12, 23, 34, 342, 2345] print(lst)      # [1, 23, 34, 5, 6, 342, 12, 12, 2345, -3]</code></pre> <p>还有一点就是 sorted 函数可以将数据放入函数中进行处理，然后根据结果进行排序。</p> <pre><code class="language-python">lst = [1, 23, 34, 5, 6, 342, 12, 12, 2345, -3]  """ 按照绝对值进行排序 """ new_lst = sorted(lst, key=abs) print(new_lst)  # [1, -3, 5, 6, 12, 12, 23, 34, 342, 2345]   """ 按照除以10的余数进行排序 """ def func(num):    return num % 10 new_lst = sorted(lst, key=func) print(new_lst)  # [1, 342, 12, 12, 23, 34, 5, 2345, 6, -3]  # 可以看到，我们指定函数之后排序的结果既不是原数据的绝对值、也不是原数据除以10的余数，而是根据这两种计算结果对原数据进行了排序。</code></pre> <h4 id="sort和sorted">sort和sorted</h4> <p>既然有了列表的内置函数sort，为什么我们还要使用sorted函数呢？</p> <ol> <li>sorted可以排序一切可迭代对象，但是sort只是列表的内置函数，只能对列表进行排序；</li> <li>sorted排序返回新的数据，不改变原数据，sort改变了原数据；</li> <li>sorted可以指定函数，根据函数的计算结果、按照某一种方式进行排序，但是sort只能单纯的根据数字大小和ASCII进行排序。</li> </ol> <h3 id="总结">总结</h3> <p>高阶函数就是将函数作为参数的函数。</p> <pre><code>map(Function,Iterable)（将可迭代性数据中的元素一一取出放入函数中进行运算在将结果返回，最后返回的数据类型是迭代器）  filter(Function,Iterable)（过滤数据，将可迭代性数据放入函数中进行运算，结果为真将数据返回，反之舍弃，最会返回的数据类型是迭代器）  reduce(Function,Iterable)（计算数据，将可迭代型数据中的前两个元素拿出放入函数中进行运算将结果在与后一个元素进行运算，最后返回最终的结果）  sorted(Iterable,[key=Function],[reverse =Bool(False(default)/True)])（将可迭代型数据进行排序，或将可迭代型数据放入函数中进行运算将结果进行排序返回）</code></pre> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-72051.htm">关于pd.read_csv() 读数据的注意事项</a></p>
                                        <p>下一个：<a href="/news/article-72721.htm">动物疫苗销售需要什么手续和条件呢（卖动物疫苗利润有多高）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-4-free-node-subscribe-links.htm" title="「1月4日」最高速度18.7M/S，2025年Free Clash Meta每天更新免费节点订阅地址">「1月4日」最高速度18.7M/S，2025年Free Clash Meta每天更新免费节点订阅地址</a></li>
                        <li class="py-2"><a href="/news/article-48237.htm" title="JavaScript如何查找不同的元素">JavaScript如何查找不同的元素</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-13-node-share-links.htm" title="「1月13日」最高速度20.1M/S，2025年Free Clash Meta每天更新免费节点订阅地址">「1月13日」最高速度20.1M/S，2025年Free Clash Meta每天更新免费节点订阅地址</a></li>
                        <li class="py-2"><a href="/news/article-44825.htm" title="动物疫苗的管理方法包括（动物疫苗法规）">动物疫苗的管理方法包括（动物疫苗法规）</a></li>
                        <li class="py-2"><a href="/news/article-59055.htm" title="@order 注解用法">@order 注解用法</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-8-free-node-subscribe.htm" title="「1月8日」最高速度21.5M/S，2025年Free Clash Meta每天更新免费节点订阅地址">「1月8日」最高速度21.5M/S，2025年Free Clash Meta每天更新免费节点订阅地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-13-node-share-links.htm" title="「2月13日」最高速度19.5M/S，2025年Free Clash Meta每天更新免费节点订阅地址">「2月13日」最高速度19.5M/S，2025年Free Clash Meta每天更新免费节点订阅地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-7-free-node-subscribe-links.htm" title="「3月7日」最高速度21.4M/S，2025年Free Clash Meta每天更新免费节点订阅地址">「3月7日」最高速度21.4M/S，2025年Free Clash Meta每天更新免费节点订阅地址</a></li>
                        <li class="py-2"><a href="/news/article-69432.htm" title="猫咪三针疫苗大概多少钱啊（猫三针疫苗多少钱一只）">猫咪三针疫苗大概多少钱啊（猫三针疫苗多少钱一只）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-6-free-node-subscribe.htm" title="「1月6日」最高速度18.1M/S，2025年Free Clash Meta每天更新免费节点订阅地址">「1月6日」最高速度18.1M/S，2025年Free Clash Meta每天更新免费节点订阅地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">45</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
    </section>
        <section class="w3l-market-footer">
        <footer class="footer-28">
            <div class="footer-bg-layer">
                <div class="midd-footer-28 align-center py-lg-4 py-3 mt-5">
                    <div class="container">
                        <p class="copy-footer-28 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            Free Clash Meta免费节点分享站 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </footer>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            &#10548;
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //footer-28 block -->
    <!-- jQuery, Bootstrap JS -->
    <script src="/assets/website/js/frontend/freeclashmeta/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/freeclashmeta/bootstrap.min.js"></script>
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/freeclashmeta/owl.carousel.js"></script>
    <!-- script for owlcarousel -->
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: true,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: true
                },
                1000: {
                    items: 1,
                    nav: true
                }
            }
        })
    })
    </script>
    <!-- //script for owlcarousel -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <script src="/assets/website/js/frontend/freeclashmeta/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>